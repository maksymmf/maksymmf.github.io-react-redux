[{"/Users/maksymm/Desktop/react-redux/src/index.js":"1","/Users/maksymm/Desktop/react-redux/src/reportWebVitals.js":"2","/Users/maksymm/Desktop/react-redux/src/store/index.js":"3","/Users/maksymm/Desktop/react-redux/src/components/app/App.js":"4","/Users/maksymm/Desktop/react-redux/src/store/reducers/todo.js":"5","/Users/maksymm/Desktop/react-redux/src/store/reducers/users.js":"6","/Users/maksymm/Desktop/react-redux/src/store/reducers/posts.js":"7","/Users/maksymm/Desktop/react-redux/src/components/TodoList/TodoList.js":"8","/Users/maksymm/Desktop/react-redux/src/components/PostsList/PostsList.js":"9","/Users/maksymm/Desktop/react-redux/src/components/UserList/UserList.js":"10","/Users/maksymm/Desktop/react-redux/src/components/Navigation/Navigation.js":"11","/Users/maksymm/Desktop/react-redux/src/components/UserData/UserData.js":"12","/Users/maksymm/Desktop/react-redux/src/components/NotFound/NotFound.js":"13","/Users/maksymm/Desktop/react-redux/src/store/types.js":"14","/Users/maksymm/Desktop/react-redux/src/utils.js":"15"},{"size":491,"mtime":1678368062973,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1675257326372,"results":"18","hashOfConfig":"17"},{"size":419,"mtime":1676533426575,"results":"19","hashOfConfig":"17"},{"size":854,"mtime":1677337825713,"results":"20","hashOfConfig":"17"},{"size":425,"mtime":1677880993243,"results":"21","hashOfConfig":"17"},{"size":435,"mtime":1677880999585,"results":"22","hashOfConfig":"17"},{"size":431,"mtime":1677880996081,"results":"23","hashOfConfig":"17"},{"size":2388,"mtime":1677881013628,"results":"24","hashOfConfig":"17"},{"size":3038,"mtime":1677414569946,"results":"25","hashOfConfig":"17"},{"size":1435,"mtime":1677881022333,"results":"26","hashOfConfig":"17"},{"size":529,"mtime":1677860751012,"results":"27","hashOfConfig":"17"},{"size":9668,"mtime":1677882398017,"results":"28","hashOfConfig":"17"},{"size":114,"mtime":1675257326370,"results":"29","hashOfConfig":"17"},{"size":177,"mtime":1676123577796,"results":"30","hashOfConfig":"17"},{"size":218,"mtime":1677881115387,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"aoketo",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maksymm/Desktop/react-redux/src/index.js",["78"],[],"/Users/maksymm/Desktop/react-redux/src/reportWebVitals.js",[],[],"/Users/maksymm/Desktop/react-redux/src/store/index.js",[],[],"/Users/maksymm/Desktop/react-redux/src/components/app/App.js",[],[],"/Users/maksymm/Desktop/react-redux/src/store/reducers/todo.js",[],[],"/Users/maksymm/Desktop/react-redux/src/store/reducers/users.js",[],[],"/Users/maksymm/Desktop/react-redux/src/store/reducers/posts.js",[],[],"/Users/maksymm/Desktop/react-redux/src/components/TodoList/TodoList.js",[],[],"/Users/maksymm/Desktop/react-redux/src/components/PostsList/PostsList.js",[],[],"/Users/maksymm/Desktop/react-redux/src/components/UserList/UserList.js",[],[],"/Users/maksymm/Desktop/react-redux/src/components/Navigation/Navigation.js",[],[],"/Users/maksymm/Desktop/react-redux/src/components/UserData/UserData.js",["79","80","81","82"],[],"import { handleFetch } from '../../utils';\nimport { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst UserData = () => {\n    const [users, setUsers] = useState([]);\n    const [toggleState, setToggleState] = useState(1);\n    const [userTodo, setUserTodo] = useState([]);\n    const [userPosts, setUserPosts] = useState([]);\n    const [userAlbums, setUserAlbums] = useState([]);\n    const {id} = useParams();\n    const userId = +id;\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const getUsers = async () => {\n            setUsers(await handleFetch(`${process.env.REACT_APP_URL}users`));\n        }\n\n        const getUserAlbums = async () => {\n            setUserAlbums(await handleFetch(`${process.env.REACT_APP_URL}users/${userId}/albums`));\n        }\n\n        const getUserTodo = async () => {\n            setUserTodo(await handleFetch(`${process.env.REACT_APP_URL}users/${userId}/todos`));\n        }\n\n        const getUserPosts = async () => {\n            setUserPosts(await handleFetch(`${process.env.REACT_APP_URL}users/${userId}/posts`));\n        }\n\n        getUsers();\n        getUserAlbums();\n        getUserTodo();\n        getUserPosts();\n    }, []);\n\n    const handlePreviousRoute = () => {\n        navigate('/users');\n    }\n\n    const switchTab = (index) => {\n        setToggleState(index);\n    }\n\n    const handleTodoToggle = (id) => {\n        const updatedTodo = userTodo.map(todo => {\n            if (todo.id === id) {\n                return {\n                    ...todo,\n                    completed: !todo.completed\n                }\n            }\n            \n            return todo;\n        });\n\n        setUserTodo(updatedTodo);\n    }\n\n    return (\n        <div className='user-page'>\n            <button className='previous-page-button' onClick={() => handlePreviousRoute()}>Go Back</button>\n            {users.map((user) => {\n                return (\n                    <div key={user.id}>\n                        {user.id === userId ? (\n                            <div className='user-page-wrapper'>\n                                <div className='tabs'>\n                                    <ul className='tabs-header'>\n                                        <li><a \n                                        onClick={() => switchTab(1)} \n                                        className={toggleState === 1 ? 'active-link' : null}\n                                        >albums</a></li>\n                                        <li><a \n                                        onClick={() => switchTab(2)} \n                                        className={toggleState === 2 ? 'active-link' : null}\n                                        >todo</a></li>\n                                        <li><a \n                                        onClick={() => switchTab(3)} \n                                        className={toggleState === 3 ? 'active-link' : null}\n                                        >posts</a></li>\n                                    </ul>\n                                    <div className='tabs-content'>\n                                        <table className={toggleState === 1 ? 'tab-active' : 'tab-inactive'}>\n                                            <thead>\n                                                <tr>\n                                                    <th>title</th>\n                                                </tr>\n                                            </thead>\n                                            {userAlbums.map((album) => {\n                                                return (\n                                                    <tbody key={album.id}>\n                                                        <tr>\n                                                            <td>{album.title}</td>\n                                                        </tr>\n                                                    </tbody>\n                                                )\n                                            })}\n                                        </table>\n                                        <table className={toggleState === 2 ? 'tab-active' : 'tab-inactive'}>\n                                            <thead>\n                                                <tr>\n                                                    <th>title</th>\n                                                    <th>completed</th>\n                                                </tr>\n                                            </thead>\n                                            {userTodo.map((todo) => {\n                                            return (\n                                                <tbody key={todo.id}>\n                                                    <tr>\n                                                        <td>{todo.title}</td>\n                                                        <td \n                                                        onClick={() => handleTodoToggle(todo.id)}\n                                                        className={todo.completed ? 'todo-completed' : 'todo-not-completed'}\n                                                        ></td>\n                                                    </tr>\n                                                </tbody>\n                                            )\n                                            })}\n                                        </table>\n                                        <table className={toggleState === 3 ? 'tab-active' : 'tab-inactive'}>\n                                            <thead>\n                                                <tr>\n                                                    <th>title</th>\n                                                    <th>body</th>\n                                                </tr>\n                                            </thead>\n                                            {userPosts.map((post) => {\n                                                return (\n                                                    <tbody key={post.id}>\n                                                        <tr>\n                                                            <td>{post.title}</td>\n                                                            <td>{post.body}</td>\n                                                        </tr>\n                                                    </tbody>\n                                                )\n                                            })}\n                                        </table>\n                                    </div>\n                                </div>\n                                <ul className='user-info'>\n                                    <li>\n                                        <span className='mobile-img'></span>\n                                        <ul>\n                                            <li>\n                                                <a href={`tel:${user.phone.split(\" \")[0].replace(/\\D/g, '')}`}\n                                                >{user.phone.split(\" \")[0]}\n                                                </a>\n                                            </li>\n                                            <li><p>Phone</p></li>\n                                        </ul>\n                                    </li>\n                                    <li>\n                                        <span className='email-img'></span>\n                                        <ul>\n                                            <li><a href={`mailto:${encodeURIComponent((user.email))}`}>{user.email}</a></li>\n                                            <li><p>Email</p></li>\n                                        </ul>\n                                    </li>\n                                    <li>\n                                        <span className='location-img'></span>\n                                        <ul>\n                                            <li>{user.address.street}</li>\n                                            <li>{user.address.suite}</li>\n                                            <li>{user.address.city}</li>\n                                            <li><p>Address</p></li>\n                                        </ul>\n                                    </li>\n                                    <li>\n                                        <span className='social-img'></span>\n                                        <ul>\n                                            <li>{user.website}</li>\n                                            <li><p>Social Media</p></li>\n                                        </ul>\n                                    </li>\n                                    <li>\n                                        <span className='company-img'></span>\n                                        <ul>\n                                            <li>{user.company.name}</li>\n                                            <li>{user.company.catchPhrase}</li>\n                                            <li>{user.company.bs}</li>\n                                            <li><p>Company</p></li>\n                                        </ul>\n                                    </li>\n                                </ul>\n                            </div>\n                        ) : (\n                            null\n                        )}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default UserData;","/Users/maksymm/Desktop/react-redux/src/components/NotFound/NotFound.js",[],[],"/Users/maksymm/Desktop/react-redux/src/store/types.js",[],[],"/Users/maksymm/Desktop/react-redux/src/utils.js",[],[],{"ruleId":"83","severity":1,"message":"84","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":36,"column":8,"nodeType":"89","endLine":36,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":71,"column":45,"nodeType":"93","endLine":74,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":75,"column":45,"nodeType":"93","endLine":78,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":79,"column":45,"nodeType":"93","endLine":82,"endColumn":42},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["94"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"95","fix":"96"},"Update the dependencies array to be: [userId]",{"range":"97","text":"98"},[1225,1227],"[userId]"]