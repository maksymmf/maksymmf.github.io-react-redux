{"ast":null,"code":"import _objectSpread from\"/Users/maksymm/Desktop/react-redux/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/maksymm/Desktop/react-redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/maksymm/Desktop/react-redux/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/maksymm/Desktop/react-redux/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/maksymm/Desktop/react-redux/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{handleFetch}from\"../../utils\";import{useEffect,useState}from'react';import{useForm}from\"react-hook-form\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostsList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,reset=_useForm.reset,errors=_useForm.formState.errors;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isActive=_useState4[0],setActive=_useState4[1];var regEx=/^([a-zA-Z0-9 _-]+)$/;var errorMessage=\"This field is required and may contain letters and numbers only\";useEffect(function(){var getPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var allPosts;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return handleFetch(\"\".concat(process.env.REACT_APP_URL,\"posts\"));case 2:allPosts=_context.sent;setPosts(allPosts.slice(0,5));case 4:case\"end\":return _context.stop();}},_callee);}));return function getPosts(){return _ref.apply(this,arguments);};}();getPosts();},[]);var onSubmit=function onSubmit(data){setPosts([].concat(_toConsumableArray(posts),[data]));reset();toggleFormClass();};var toggleFormClass=function toggleFormClass(){setActive(!isActive);reset();};return/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"button\",{className:isActive?\"add-post-button-darker\":\"add-post-button\",onClick:isActive?null:toggleFormClass,children:\"Add Post\"}),/*#__PURE__*/_jsx(\"div\",{className:isActive?\"form-active\":\"form-inactive\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[isActive?/*#__PURE__*/_jsx(\"div\",{className:\"close-form\",onClick:toggleFormClass}):null,/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title-input\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"title-input\",id:\"title-input\"},register(\"title\",{required:true,maxLength:50,size:100,validate:function validate(value){return regEx.test(value);}}))),errors.title&&/*#__PURE__*/_jsx(\"span\",{className:\"error\",children:errorMessage}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"body-input\",children:\"Body\"}),/*#__PURE__*/_jsx(\"textarea\",_objectSpread({className:\"body-input\",id:\"body-input\",rows:5},register(\"body\",{required:true,maxLength:300,validate:function validate(value){return regEx.test(value);}}))),errors.body&&/*#__PURE__*/_jsx(\"span\",{className:\"error\",children:errorMessage}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\"})]})}),posts.length?/*#__PURE__*/_jsxs(\"table\",{className:isActive?\"table-darker\":null,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Body\"})]})}),posts.map(function(post,index){return/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:index+1}),/*#__PURE__*/_jsx(\"td\",{children:post.title}),/*#__PURE__*/_jsx(\"td\",{children:post.body})]})},index+1);})]}):/*#__PURE__*/_jsx(\"div\",{className:\"loading\"})]});}export default PostsList;","map":{"version":3,"names":["handleFetch","useEffect","useState","useForm","PostsList","posts","setPosts","register","handleSubmit","reset","errors","formState","isActive","setActive","regEx","errorMessage","getPosts","process","env","REACT_APP_URL","allPosts","slice","onSubmit","data","toggleFormClass","required","maxLength","size","validate","value","test","title","body","length","map","post","index"],"sources":["/Users/maksymm/Desktop/react-redux/src/components/PostsList/PostsList.js"],"sourcesContent":["import { handleFetch } from \"../../utils\";\nimport { useEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\n\nfunction PostsList () {\n    const [posts, setPosts] = useState([]);\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    const [isActive, setActive] = useState(false);\n    const regEx = (/^([a-zA-Z0-9 _-]+)$/);\n    const errorMessage = \"This field is required and may contain letters and numbers only\";\n\n    useEffect(() => {\n        const getPosts = async () => {\n            const allPosts = await handleFetch(`${process.env.REACT_APP_URL}posts`);\n\n            setPosts(allPosts.slice(0, 5));\n        }\n\n        getPosts();\n    }, []);\n\n    const onSubmit = data => {\n        setPosts( [...posts, data] );\n        reset();\n        toggleFormClass();\n    }\n\n    const toggleFormClass = () => {\n        setActive(!isActive);\n        reset();\n    }\n\n    return (\n        <div className=\"content\">\n            <button className={isActive ? \"add-post-button-darker\" : \"add-post-button\"} \n            onClick={isActive ? null : toggleFormClass}>Add Post</button>\n            <div className={isActive ? \"form-active\" : \"form-inactive\"}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    {isActive ? <div className=\"close-form\" onClick={toggleFormClass}/> : null}\n                    <label htmlFor=\"title-input\">Title</label>\n                    <input className=\"title-input\" id=\"title-input\"\n                    {...register(\"title\", {required: true, maxLength: 50, size:100, validate: (value) => regEx.test(value)})}/>\n                    {errors.title && <span className=\"error\">{errorMessage}</span>}\n                    <label htmlFor=\"body-input\">Body</label>\n                    <textarea className=\"body-input\" id=\"body-input\" rows={5} \n                    {...register(\"body\", {required: true, maxLength: 300, validate: (value) => regEx.test(value)})}/>\n                    {errors.body && <span className=\"error\">{errorMessage}</span>}\n                    <input type=\"submit\"/>\n                </form>\n            </div>\n            {posts.length ? (\n                <table className={isActive ? \"table-darker\" : null}>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Title</th>\n                            <th>Body</th>\n                        </tr>\n                    </thead>\n                {posts.map((post, index) => {\n                    return (\n                        <tbody key={index + 1}>\n                            <tr>\n                                <td>{index + 1}</td>\n                                <td>{post.title}</td>\n                                <td>{post.body}</td>\n                            </tr>\n                        </tbody>\n                    )\n                })}\n                </table>\n            ) : (\n                <div className='loading'></div>\n            )}\n        </div>\n    )\n}\n\nexport default PostsList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}