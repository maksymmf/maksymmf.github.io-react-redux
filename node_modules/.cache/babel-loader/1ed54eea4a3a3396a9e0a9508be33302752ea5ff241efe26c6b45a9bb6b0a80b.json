{"ast":null,"code":"var _jsxFileName = \"/Users/maksymm/Desktop/task-3.6/task-3.6/src/components/PostsList/PostsList.js\",\n  _s = $RefreshSig$();\nimport { handleFetch } from \"../../utils\";\nimport { useEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostsList() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [isActive, setActive] = useState(\"false\");\n  const regEx = /^([a-zA-Z0-9 _-]+)$/;\n  const errorMessage = \"This field is required and may contain letters and numbers only\";\n  useEffect(() => {\n    const getPosts = async () => {\n      const allPosts = await handleFetch(`${process.env.REACT_APP_URL}posts`);\n      setPosts(allPosts.slice(0, 5));\n    };\n    getPosts();\n  }, []);\n  const onSubmit = data => {\n    setPosts([...posts, data]);\n    reset();\n    toggleFormClass();\n  };\n  const FormTemplate = () => {\n    const regEx = /^([a-zA-Z0-9 _-]+)$/;\n    const errorMessage = \"This field is required and may contain letters and numbers only\";\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [isActive ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close-form\",\n        onClick: toggleFormClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title-input\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title-input\",\n        id: \"title-input\",\n        ...register(\"title\", {\n          required: true,\n          maxLength: 50,\n          size: 100,\n          validate: value => regEx.test(value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"body-input\",\n        children: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"body-input\",\n        id: \"body-input\",\n        rows: 5,\n        ...register(\"body\", {\n          required: true,\n          maxLength: 300,\n          validate: value => regEx.test(value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), errors.body && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  };\n  const toggleFormClass = () => {\n    setActive(!isActive);\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: isActive ? \"add-post-button\" : \"add-post-button-darker\",\n      onClick: isActive ? toggleFormClass : null,\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isActive ? \"form-inactive\" : \"form-active\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [isActive ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"close-form\",\n          onClick: toggleFormClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title-input\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"title-input\",\n          id: \"title-input\",\n          ...register(\"title\", {\n            required: true,\n            maxLength: 50,\n            size: 100,\n            validate: value => regEx.test(value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"body-input\",\n          children: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"body-input\",\n          id: \"body-input\",\n          rows: 5,\n          ...register(\"body\", {\n            required: true,\n            maxLength: 300,\n            validate: value => regEx.test(value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), errors.body && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: isActive ? null : \"table-darker\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), posts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(PostsList, \"eE1Vq0t4fBv26NBd6yEFPmTgjzk=\", false, function () {\n  return [useForm];\n});\n_c = PostsList;\nexport default PostsList;\nvar _c;\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["handleFetch","useEffect","useState","useForm","PostsList","posts","setPosts","register","handleSubmit","reset","formState","errors","isActive","setActive","regEx","errorMessage","getPosts","allPosts","process","env","REACT_APP_URL","slice","onSubmit","data","toggleFormClass","FormTemplate","required","maxLength","size","validate","value","test","title","body","length","map","post","index"],"sources":["/Users/maksymm/Desktop/task-3.6/task-3.6/src/components/PostsList/PostsList.js"],"sourcesContent":["import { handleFetch } from \"../../utils\";\nimport { useEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\n\nfunction PostsList () {\n    const [posts, setPosts] = useState([]);\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    const [isActive, setActive] = useState(\"false\");\n    const regEx = (/^([a-zA-Z0-9 _-]+)$/);\n    const errorMessage = \"This field is required and may contain letters and numbers only\";\n\n    useEffect(() => {\n        const getPosts = async () => {\n            const allPosts = await handleFetch(`${process.env.REACT_APP_URL}posts`);\n            setPosts(allPosts.slice(0, 5));\n        }\n\n        getPosts();\n    }, []);\n\n    const onSubmit = data => {\n        setPosts( [...posts, data] );\n        reset();\n        toggleFormClass();\n    }\n\n    const FormTemplate = () => {\n        const regEx = (/^([a-zA-Z0-9 _-]+)$/);\n        const errorMessage = \"This field is required and may contain letters and numbers only\";\n\n        return (\n            <form onSubmit={handleSubmit(onSubmit)}>\n                {isActive ? null : <div className=\"close-form\" onClick={toggleFormClass}/>}\n                <label htmlFor=\"title-input\">Title</label>\n                <input className=\"title-input\" id=\"title-input\"\n                {...register(\"title\", {required: true, maxLength: 50, size:100, validate: (value) => regEx.test(value)})}/>\n                {errors.title && <span className=\"error\">{errorMessage}</span>}\n                <label htmlFor=\"body-input\">Body</label>\n                <textarea className=\"body-input\" id=\"body-input\" rows={5} \n                {...register(\"body\", {required: true, maxLength: 300, validate: (value) => regEx.test(value)})}/>\n                {errors.body && <span className=\"error\">{errorMessage}</span>}\n                <input type=\"submit\"/>\n            </form>\n        )\n    }\n\n    const toggleFormClass = () => {\n        setActive(!isActive);\n        reset();\n    }\n\n    return (\n        <div className=\"content\">\n            <button className={isActive ? \"add-post-button\" : \"add-post-button-darker\"} \n            onClick={isActive ? toggleFormClass : null}>Add Post</button>\n            <div className={isActive ? \"form-inactive\" : \"form-active\"}>\n                {/* <FormTemplate /> */}\n                <form onSubmit={handleSubmit(onSubmit)}>\n                {isActive ? null : <div className=\"close-form\" onClick={toggleFormClass}/>}\n                <label htmlFor=\"title-input\">Title</label>\n                <input className=\"title-input\" id=\"title-input\"\n                {...register(\"title\", {required: true, maxLength: 50, size:100, validate: (value) => regEx.test(value)})}/>\n                {errors.title && <span className=\"error\">{errorMessage}</span>}\n                <label htmlFor=\"body-input\">Body</label>\n                <textarea className=\"body-input\" id=\"body-input\" rows={5} \n                {...register(\"body\", {required: true, maxLength: 300, validate: (value) => regEx.test(value)})}/>\n                {errors.body && <span className=\"error\">{errorMessage}</span>}\n                <input type=\"submit\"/>\n            </form>\n            </div>\n            {posts.length > 0 ? (\n                <table className={isActive ? null : \"table-darker\"}>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Title</th>\n                            <th>Body</th>\n                        </tr>\n                    </thead>\n                {posts.map((post, index) => {\n                    return (\n                        <tbody key={index + 1}>\n                            <tr>\n                                <td>{index + 1}</td>\n                                <td>{post.title}</td>\n                                <td>{post.body}</td>\n                            </tr>\n                        </tbody>\n                    )\n                })}\n                </table>\n            ) : (\n                <div className='loading'></div>\n            )}\n        </div>\n    )\n}\n\nexport default PostsList;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AAAC;AAE1C,SAASC,SAAS,GAAI;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEK,QAAQ;IAAEC,YAAY;IAAEC,KAAK;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGR,OAAO,EAAE;EAC1E,MAAM,CAACS,QAAQ,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAC/C,MAAMY,KAAK,GAAI,qBAAsB;EACrC,MAAMC,YAAY,GAAG,iEAAiE;EAEtFd,SAAS,CAAC,MAAM;IACZ,MAAMe,QAAQ,GAAG,YAAY;MACzB,MAAMC,QAAQ,GAAG,MAAMjB,WAAW,CAAE,GAAEkB,OAAO,CAACC,GAAG,CAACC,aAAc,OAAM,CAAC;MACvEd,QAAQ,CAACW,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IAEDL,QAAQ,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,QAAQ,GAAGC,IAAI,IAAI;IACrBjB,QAAQ,CAAE,CAAC,GAAGD,KAAK,EAAEkB,IAAI,CAAC,CAAE;IAC5Bd,KAAK,EAAE;IACPe,eAAe,EAAE;EACrB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACvB,MAAMX,KAAK,GAAI,qBAAsB;IACrC,MAAMC,YAAY,GAAG,iEAAiE;IAEtF,oBACI;MAAM,QAAQ,EAAEP,YAAY,CAACc,QAAQ,CAAE;MAAA,WAClCV,QAAQ,GAAG,IAAI,gBAAG;QAAK,SAAS,EAAC,YAAY;QAAC,OAAO,EAAEY;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1E;QAAO,OAAO,EAAC,aAAa;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC1C;QAAO,SAAS,EAAC,aAAa;QAAC,EAAE,EAAC,aAAa;QAAA,GAC3CjB,QAAQ,CAAC,OAAO,EAAE;UAACmB,QAAQ,EAAE,IAAI;UAAEC,SAAS,EAAE,EAAE;UAAEC,IAAI,EAAC,GAAG;UAAEC,QAAQ,EAAGC,KAAK,IAAKhB,KAAK,CAACiB,IAAI,CAACD,KAAK;QAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAG,EAC1GnB,MAAM,CAACqB,KAAK,iBAAI;QAAM,SAAS,EAAC,OAAO;QAAA,UAAEjB;MAAY;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC9D;QAAO,OAAO,EAAC,YAAY;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACxC;QAAU,SAAS,EAAC,YAAY;QAAC,EAAE,EAAC,YAAY;QAAC,IAAI,EAAE,CAAE;QAAA,GACrDR,QAAQ,CAAC,MAAM,EAAE;UAACmB,QAAQ,EAAE,IAAI;UAAEC,SAAS,EAAE,GAAG;UAAEE,QAAQ,EAAGC,KAAK,IAAKhB,KAAK,CAACiB,IAAI,CAACD,KAAK;QAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAG,EAChGnB,MAAM,CAACsB,IAAI,iBAAI;QAAM,SAAS,EAAC,OAAO;QAAA,UAAElB;MAAY;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC7D;QAAO,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACnB;EAEf,CAAC;EAED,MAAMS,eAAe,GAAG,MAAM;IAC1BX,SAAS,CAAC,CAACD,QAAQ,CAAC;IACpBH,KAAK,EAAE;EACX,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB;MAAQ,SAAS,EAAEG,QAAQ,GAAG,iBAAiB,GAAG,wBAAyB;MAC3E,OAAO,EAAEA,QAAQ,GAAGY,eAAe,GAAG,IAAK;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7D;MAAK,SAAS,EAAEZ,QAAQ,GAAG,eAAe,GAAG,aAAc;MAAA,uBAEvD;QAAM,QAAQ,EAAEJ,YAAY,CAACc,QAAQ,CAAE;QAAA,WACtCV,QAAQ,GAAG,IAAI,gBAAG;UAAK,SAAS,EAAC,YAAY;UAAC,OAAO,EAAEY;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAE,eAC1E;UAAO,OAAO,EAAC,aAAa;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC1C;UAAO,SAAS,EAAC,aAAa;UAAC,EAAE,EAAC,aAAa;UAAA,GAC3CjB,QAAQ,CAAC,OAAO,EAAE;YAACmB,QAAQ,EAAE,IAAI;YAAEC,SAAS,EAAE,EAAE;YAAEC,IAAI,EAAC,GAAG;YAAEC,QAAQ,EAAGC,KAAK,IAAKhB,KAAK,CAACiB,IAAI,CAACD,KAAK;UAAC,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAG,EAC1GnB,MAAM,CAACqB,KAAK,iBAAI;UAAM,SAAS,EAAC,OAAO;UAAA,UAAEjB;QAAY;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC9D;UAAO,OAAO,EAAC,YAAY;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ,eACxC;UAAU,SAAS,EAAC,YAAY;UAAC,EAAE,EAAC,YAAY;UAAC,IAAI,EAAE,CAAE;UAAA,GACrDR,QAAQ,CAAC,MAAM,EAAE;YAACmB,QAAQ,EAAE,IAAI;YAAEC,SAAS,EAAE,GAAG;YAAEE,QAAQ,EAAGC,KAAK,IAAKhB,KAAK,CAACiB,IAAI,CAACD,KAAK;UAAC,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAG,EAChGnB,MAAM,CAACsB,IAAI,iBAAI;UAAM,SAAS,EAAC,OAAO;UAAA,UAAElB;QAAY;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC7D;UAAO,IAAI,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IACnB;MAAA;MAAA;MAAA;IAAA,QACD,EACLV,KAAK,CAAC6B,MAAM,GAAG,CAAC,gBACb;MAAO,SAAS,EAAEtB,QAAQ,GAAG,IAAI,GAAG,cAAe;MAAA,wBAC/C;QAAA,uBACI;UAAA,wBACI;YAAA,UAAI;UAAE;YAAA;YAAA;YAAA;UAAA,QAAK,eACX;YAAA,UAAI;UAAK;YAAA;YAAA;YAAA;UAAA,QAAK,eACd;YAAA,UAAI;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MACZ;QAAA;QAAA;QAAA;MAAA,QACD,EACXP,KAAK,CAAC8B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACxB,oBACI;UAAA,uBACI;YAAA,wBACI;cAAA,UAAKA,KAAK,GAAG;YAAC;cAAA;cAAA;cAAA;YAAA,QAAM,eACpB;cAAA,UAAKD,IAAI,CAACJ;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM,eACrB;cAAA,UAAKI,IAAI,CAACH;YAAI;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA;YAAA;YAAA;YAAA;UAAA;QACnB,GALGI,KAAK,GAAG,CAAC;UAAA;UAAA;UAAA;QAAA,QAMb;MAEhB,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACM,gBAER;MAAK,SAAS,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAC3B;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd;AAAC,GA5FQjC,SAAS;EAAA,QAEmDD,OAAO;AAAA;AAAA,KAFnEC,SAAS;AA8FlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}